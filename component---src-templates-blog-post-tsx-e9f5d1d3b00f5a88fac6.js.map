{"version":3,"file":"component---src-templates-blog-post-tsx-e9f5d1d3b00f5a88fac6.js","mappings":"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","sources":["webpack://Duckuism/./src/components/comments.tsx","webpack://Duckuism/./src/templates/blog-post.tsx"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport styled from \"styled-components\"\n\nexport const Comments = () => {\n  const commentsInjectionRoot: React.RefObject<HTMLDivElement> =\n    React.createRef()\n\n  useEffect(() => {\n    if (commentsInjectionRoot.current?.children.length === 0) {\n      const scriptEl = document.createElement(\"script\")\n      scriptEl.setAttribute(\"src\", \"https://utteranc.es/client.js\")\n      scriptEl.setAttribute(\"crossorigin\", \"anonymous\")\n      scriptEl.setAttribute(\"async\", \"true\")\n      scriptEl.setAttribute(\"repo\", \"Duckuism/Duckuism.github.io\")\n      scriptEl.setAttribute(\"issue-term\", \"pathname\")\n      scriptEl.setAttribute(\"theme\", \"github-light\")\n      commentsInjectionRoot.current?.appendChild(scriptEl)\n    }\n  }, [])\n\n  return <Utterances ref={commentsInjectionRoot} />\n}\n\nconst Utterances = styled.div`\n  .utterances {\n    max-width: none;\n  }\n`\n","import * as React from \"react\"\nimport { HeadProps, Link, useStaticQuery, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Comments } from \"../components/comments\"\n\nconst BlogPostTemplate = () => {\n  const data = useStaticQuery<Queries.BlogPostBySlugQuery>(graphql`\n    query BlogPostBySlug(\n      $id: String\n      $previousPostId: String\n      $nextPostId: String\n    ) {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      markdownRemark(id: { eq: $id }) {\n        id\n        excerpt(pruneLength: 160)\n        html\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n        }\n      }\n      previous: markdownRemark(id: { eq: $previousPostId }) {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n        }\n      }\n      next: markdownRemark(id: { eq: $nextPostId }) {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n        }\n      }\n    }\n  `)\n\n  const { site, markdownRemark: post, previous, next } = data\n\n  const siteTitle = site?.siteMetadata?.title || `Title`\n\n  const isBrowser = () => typeof window !== \"undefined\"\n\n  if (!isBrowser()) return null\n\n  return (\n    <Layout location={window.location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post?.frontmatter?.title}</h1>\n          <p>{post?.frontmatter?.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post?.html ?? \"\" }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <Comments />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous?.fields?.slug ?? \"\"} rel=\"prev\">\n                ← {previous?.frontmatter?.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next?.fields?.slug ?? \"\"} rel=\"next\">\n                {next?.frontmatter?.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({\n  data: { markdownRemark: post },\n}: HeadProps<Queries.BlogPostBySlugQuery>) => {\n  return (\n    <Seo\n      title={post?.frontmatter?.title ?? \"\"}\n      description={(post?.frontmatter?.description || post?.excerpt) ?? \"\"}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n"],"names":["Comments","commentsInjectionRoot","React","useEffect","_commentsInjectionRoo","current","children","length","_commentsInjectionRoo2","scriptEl","document","createElement","setAttribute","appendChild","Utterances","ref","styled","div","_templateObject","_taggedTemplateLiteralLoose","Head","_ref","_post$frontmatter$tit","_post$frontmatter3","_ref2","_post$frontmatter4","data","markdownRemark","post","Seo","title","frontmatter","description","excerpt","BlogPostTemplate","_site$siteMetadata","_post$frontmatter","_post$frontmatter2","_post$html","_previous$fields$slug","_previous$fields","_previous$frontmatter","_next$fields$slug","_next$fields","_next$frontmatter","useStaticQuery","site","previous","next","siteTitle","siteMetadata","window","Layout","location","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}